{
    "version": "0.2.0",
    "configurations": [

        
        {
            "name": "C/C++: g++ build and debug active file",//配置名称，将会在调试配置下拉列表中显示 
            "type": "cppdbg",//调试器类型，Windows表示器使用cppvsdbg；GDB和LLDB使用cppdbg
            "request": "launch",//两种调试方式：Launch和Attach
            "program": "${fileDirname}/${fileBasenameNoExtension}.exe",//需要调试的程序(必须为完整程序路径，可以使用VSCode的环境变量)
            "args": [],//传递给上面程序的参数，没有参数留空即可
            "stopAtEntry": false,//是否停在程序入口点(停在main函数开始)
            "cwd": "${workspaceFolder}",// 调试程序时的工作目录
            "environment": [],//针对调试的程序，要添加到环境中的环境变量. 例如: [ { "name": "squid", "value": "clam" } ]。注意：如果不使用必须删除，否则产生错误
            "externalConsole": true,
            "MIMode": "gdb",// VSCode要使用的调试工具可选gdb和lldb
            "miDebuggerPath": "C:\\MinGW\\bin\\gdb.exe",//调试器的路径(必须是完整路径)，未指定则自动搜索PATH
            "setupCommands": [
            {
                "description": "为 gdb 启用整齐打印",
                "text": "-enable-pretty-printing",
                "ignoreFailures": true
            },
            {
                "description":  "将反汇编风格设置为 Intel",
                "text": "-gdb-set disassembly-flavor intel",
                "ignoreFailures": true                    //设置GDB或LLDB的命令的JSON数组
            }
            ]
        }
    ]
}
